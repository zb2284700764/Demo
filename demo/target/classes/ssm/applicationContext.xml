<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:jdbc.properties,classpath:ssm/ssm.properties" />

	<!-- 自动扫描,采用注解的方式进行注入，不需要在当前的配置文件中进行注入，在主容器中不扫描@Controller注解 -->
	<context:component-scan base-package="com.demo.ssm" use-default-filters="false">
		<!-- base-package 如果多个，用“,”分隔 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>


<!--    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">          -->
<!--        <property name="driverClassName" value="${driver}" />                                              -->
<!--        <property name="url" value="${url}" />                                                             -->
<!--        <property name="username" value="${username}" />                                                   -->
<!--        <property name="password" value="${password}" />                                                   -->
			<!-- 初始化连接大小 -->
<!--        <property name="initialSize" value="${initialSize}"></property>                                    -->
			<!-- 连接池最大数量 -->
<!--        <property name="maxActive" value="${maxActive}"></property>                                        -->
			<!-- 连接池最大空闲 -->
<!--        <property name="maxIdle" value="${maxIdle}"></property>                                            -->
			<!-- 连接池最小空闲 -->
<!--        <property name="minIdle" value="${minIdle}"></property>                                            -->
			<!-- 获取连接最大等待时间 -->
<!--        <property name="maxWait" value="${maxWait}"></property>                                            -->
			<!-- 设置自动回收超时连接 -->
<!--        <property name="removeAbandoned" value="true" />                                                   -->
			<!-- 自动回收超时时间(以秒数为单位) -->
<!--        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />                       -->
			<!-- 设置在自动回收超时连接的时候打印连接的超时错误 -->
<!--        <property name="logAbandoned" value="true" />                                                      -->
<!-- 	</bean>                                                                                                -->

	<!-- 数据源配置, 使用 BoneCP 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
		<property name="driverClassName" value="${driver}" />

		<!-- 基本属性 url、user、password -->
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"></property>

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="${jdbc.testSql}" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:ssm/mapping/*.xml"></property>
		<!-- 引入MyBatis配置文件 -->
		<property name="configLocation" value="classpath:ssm/mybatis-config.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.demo.ssm.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>